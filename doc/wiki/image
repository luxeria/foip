<WRAP center round important 60%>
Dieses Tutorial befindet sich noch im Aufbau.
Mehr zum Projekt auf https://github.com/luxeria/foip
</WRAP>

====== Einführung in die Bildverarbeitung mit GNU Octave ======

===== Installation =====
Die Installation von GNU Octave erfolgt bei Unixoiden Systemen über den
Paketmanager und kann direkt per Kommandozeile erfolgen. Hier das Beispiel
für den Paketmanager pacman von Archlinux

<code>
sudo pacman -S octave
</code>

und aptitude von Ubuntu (Debian)

<code>
sudo apt-get install octave
</code>

==== Erweiterungen ====
Die Instalation von Erweiterungen von Octave kann direkt aus der
Kommandozeile von Octave erfolgen. Hierzu kann entweder das gewünschte
Softwarepaket manuell lokal heruntergeladen und danach installiert werden
oder direkt aus der Datenbank bezogen und installiert werden durch
Octave.

<code octave>
pkg install -forge image
</code>

Ist eine solche Erweiterung installiert wird diese nicht automatisch geladen
wenn eine neue Octave session eröffnet wird, sondern muss manuell geladen
werden.

<code octave>
pkg load image
</code>

Bei der Verwendung von vielen Erweiterungen können auch sämtliche mit der
Angabe ''all'' geladen werden.

<code>
pkg load all
</code>

===== Daten laden und speichern =====
Einstieg in jegliche Bildverarbeitung ist das Einlesen der Bilddaten und
auch deren Speicherung. Im einfachsten Fall kann der Prozess in drei Teile
gegliedert werden:

  - Originaldatei einlesen
  - Manipulation
  - Manipulierte Daten ablegen

==== Graustufenbilder ====
Diese drei elementaren Schritte sind hier mit den beiden Funktionen 
''imread()'' und ''imwrite()'' des image package ein
einem Pseudobeispiel dargestellt:

<code octave>
I = imread("input_image.png");		% read image
J = my_image_processing(I);		% manipulate image
imwrite(J, "output_image.png");		% write image
</code>

Durch die Verwendung von ''imread()'' auf Graustufenbilder wird
die Grafik in eine entsprechende Matrix gespeichert mit den Pixelwerten.
Diese kann per ''imshow()'' betrachtet werden.

==== RGB Dateien ====
Beim Einlesen von Graustufenbildern sind die Pixelwerte direkt in einer
2D Matrix ableget. Beim Einlesen von RGB-Bildern wird die Grafik in eine
mehrschichtige 2D Matrix ableget, wobei jede Matrix die Pixelwerte für
eine Farbe enthält. Die einzelnen Matrizen können wiederum als
Graustufenbilder behandelt werden. Im Folgenden wird das Zerlegen eines
RGB-Bildes in die einzelnen Farblayer aufgezeigt.

<code octave>
Image = imread("input_rgb_image.png");	% read the RGB image

Red   = Image(:,:,1);			% extract red layer
Green = Image(:,:,2);			% extract green layer
Blue  = Image(:,:,3);			% extract blue layer
</code>
